generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid()) @map("_id")
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid()) @map("_id")
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  Account       Account[]
  Session       Session[]
  Transfer      Transfer[]
}

enum TransferMode {
  MANUAL_SEND @map("manual_send")
  EMAIL_SEND  @map("email_send")
}

model Transfer {
  id                    String       @id @default(cuid()) @map("_id")
  transferKey           String       @unique
  transferName          String
  transferMessage       String?
  transferMode          TransferMode @default(MANUAL_SEND)
  fileSize              Int
  fileType              String
  fileIsPasswordEnabled Boolean      @default(false)
  filePassword          String?
  recipientEmail        String?
  user                  User?        @relation(fields: [userId], references: [id])
  userId                String?
  maxDownloads          Int?
  expirationDate        DateTime?
  createdAt             DateTime     @default(now())
  updatedAt             DateTime     @updatedAt
}
